// <auto-generated />
using Kinopoisk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kinopoisk.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240507114017_ChageGenreTableNameAndAddMoviesGenresTable")]
    partial class ChageGenreTableNameAndAddMoviesGenresTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Kinopoisk.Models.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Kinopoisk.Models.GenreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("Kinopoisk.Models.MovieCountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("MovieId");

                    b.ToTable("movies_countries");
                });

            modelBuilder.Entity("Kinopoisk.Models.MovieInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("FilmId")
                        .HasColumnType("int")
                        .HasColumnName("film_id");

                    b.Property<string>("NameEn")
                        .HasColumnType("longtext")
                        .HasColumnName("name_en");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name_ru");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("poster_url");

                    b.Property<string>("PosterUrlPreview")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("poster_url_preview");

                    b.Property<double>("Rating")
                        .HasColumnType("double")
                        .HasColumnName("rating_kinopoisk");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("movie_infos");
                });

            modelBuilder.Entity("Kinopoisk.Models.MovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieInfoId")
                        .HasColumnType("int")
                        .HasColumnName("movie_info_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uri");

                    b.HasKey("Id");

                    b.HasIndex("MovieInfoId")
                        .IsUnique();

                    b.ToTable("movies");
                });

            modelBuilder.Entity("Kinopoisk.Models.MovieCountryModel", b =>
                {
                    b.HasOne("Kinopoisk.Models.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kinopoisk.Models.MovieModel", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Kinopoisk.Models.MovieModel", b =>
                {
                    b.HasOne("Kinopoisk.Models.MovieInfoModel", "MovieInfo")
                        .WithOne("Movie")
                        .HasForeignKey("Kinopoisk.Models.MovieModel", "MovieInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieInfo");
                });

            modelBuilder.Entity("Kinopoisk.Models.MovieInfoModel", b =>
                {
                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
